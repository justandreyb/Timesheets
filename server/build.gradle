plugins {
    id 'eclipse'
    id 'idea'
    id 'java'
}

apply from: './dependencies.gradle'

idea{
    module{
        inheritOutputDirs = true
    }
}

allprojects {
    repositories {
        maven { url "https://repo.maven.apache.org/maven2" }
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url 'https://repo.spring.io/libs-release' }
    }
}

subprojects {
    version = '0.0.1'

    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    afterEvaluate {
        repositories {
            jcenter()
        }

        jar {
            inputs.property("moduleName", moduleName)
            manifest {
                attributes('Automatic-Module-Name': moduleName)
            }
        }

        compileJava {
            doFirst {
                options.compilerArgs = [
                        '--module-path', classpath.asPath
                ]
                classpath = files()
            }
        }

        compileTestJava {
            inputs.property("moduleName", moduleName)
            doFirst {
                options.compilerArgs = [
                        '--module-path', classpath.asPath,
                        '--add-modules', 'junit',
                        '--add-reads', "$moduleName=junit",
                        '--patch-module', "$moduleName=" + files(sourceSets.test.java.srcDirs).asPath,
                ]
                classpath = files()
            }
        }

        test {
            inputs.property("moduleName", moduleName)
            doFirst {
                jvmArgs = [
                        '--module-path', classpath.asPath,
                        '--add-modules', 'ALL-MODULE-PATH',
                        '--add-reads', "$moduleName=junit",
                        '--patch-module', "$moduleName=" + files(sourceSets.test.java.outputDir).asPath,
                ]
                classpath = files()
            }
        }
    }
}

def currentOS = org.gradle.internal.os.OperatingSystem.current()
if (currentOS.isWindows()) {
    project.ext.platform = 'win'
} else if (currentOS.isLinux()) {
    project.ext.platform = 'linux'
} else if (currentOS.isMacOsX()) {
    project.ext.platform = 'mac'
}
